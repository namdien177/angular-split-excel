{"version":3,"sources":["./src/app/hello.component.ts","./src/app/helpers/helpers.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/helpers/interface-obj.ts","./src/app/helpers/rules.ts","./src/polyfills.ts","./src/app/app.component.scss","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'hello',\r\n  template: `<h1>Hello {{name}}!</h1>`,\r\n  styles: [`h1 { font-family: Lato; }`]\r\n})\r\nexport class HelloComponent  {\r\n  @Input() name: string;\r\n}\r\n","export function copyToClipboard(text) {\r\n    var dummy = document.createElement(\"textarea\");\r\n    // to avoid breaking orgain page when copying more words\r\n    // cant copy when adding below this code\r\n    // dummy.style.display = 'none'\r\n    document.body.appendChild(dummy);\r\n    //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n}\r\n\r\nexport function cap(arr) {\r\n    return arr.map((s) => {\r\n        // snake to pre-camel\r\n        const camelRaw = s.replace(/\\_./g, (matched) =>\r\n            matched.slice(1).toUpperCase()\r\n        );\r\n        const twoId = camelRaw.trim().slice(0, 2);\r\n        const aft = camelRaw\r\n            .trim()\r\n            .slice(3)\r\n            .trim()\r\n            .replace(/(_label)$/g, \"\");\r\n        let thirdChar = camelRaw.trim().slice(2, 3);\r\n        let twoIdMatched = false;\r\n        switch (twoId) {\r\n            case \"ta\":\r\n                if (camelRaw.toLowerCase().startsWith(\"table\")) {\r\n                    break;\r\n                }\r\n            case \"tb\":\r\n            case \"cb\":\r\n            case \"rb\":\r\n            case \"lb\":\r\n            case \"sb\":\r\n                thirdChar = thirdChar.toUpperCase();\r\n                twoIdMatched = true;\r\n                break;\r\n        }\r\n\r\n        if (!twoIdMatched) {\r\n            const threeId = camelRaw.trim().slice(0, 3);\r\n            let forthChar = camelRaw.trim().slice(3, 4);\r\n            const aftSpecial = camelRaw\r\n                .trim()\r\n                .slice(4)\r\n                .trim()\r\n                .replace(/(_label)$/g, \"\");\r\n            switch (threeId) {\r\n                case \"btn\":\r\n                    forthChar = forthChar.toUpperCase();\r\n                    break;\r\n            }\r\n            return threeId + forthChar + aftSpecial;\r\n        } else {\r\n            return twoId + thirdChar + aft;\r\n        }\r\n    });\r\n}\r\n\r\nexport function parse(str) {\r\n    const a = str.split(\"\\n\");\r\n    a.pop();\r\n    return a;\r\n}\r\n\r\n// camel to snake\r\nexport function snake(arr) {\r\n    return arr.map((str) => {\r\n        return (\r\n            str\r\n                .trim()\r\n                // prevent pascal case\r\n                .replace(/^[A-Z]/g, (letter) => `${letter.toLowerCase()}`)\r\n                // Parse camel point\r\n                .replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`)\r\n                // in case number\r\n                .replace(/\\d\\d/g, (letter) => `_${letter.toLowerCase()}`)\r\n        );\r\n    });\r\n};\r\n\r\nexport function parseMinusPrefix(str) {\r\n    const rows = str\r\n        .replace(/\"(.|\\n|\\s)+\"/g, (text) =>\r\n            text.slice(1, text.length - 1).replace(/(\\n|\\s)/g, \"\")\r\n        )\r\n        .split(/\\n/);\r\n    rows.pop();\r\n    return rows.map((r) => {\r\n        const splitting = r.split(/\\s+|\\t+/).filter((s) => s.trim().length > 0);\r\n        if (splitting.length === 1) {\r\n            splitting.push(\"\");\r\n        }\r\n        return splitting;\r\n    });\r\n}\r\n\r\nexport function mapToText(ids) {\r\n    let output = \"\";\r\n    ids.forEach((pair, index) => {\r\n        const id = pair[0]; // string id;\r\n        const text = pair[1]; // possible prefix;\r\n        if (text.trim().length === 0 && id.startsWith(\"cb\")) {\r\n            const rmPf = id.slice(2);\r\n            // pascal to camel\r\n            const safe = rmPf.charAt(0).toLowerCase() + rmPf.slice(1);\r\n            console.log(\"Find: \", safe);\r\n            const label: HTMLLabelElement = document.querySelector(`label[for='${safe}']`);\r\n            if (label) {\r\n                output +=\r\n                    (label.innerText || \"\").replace(/\\n/g, \"\").trim() +\r\n                    (index + 1 === ids.length ? \"\" : \"\\n\");\r\n            } else {\r\n                const alter: HTMLInputElement = document.querySelector(`input[id='${safe}'] + div`);\r\n                if (alter) {\r\n                    console.log(\"Alter: \", alter);\r\n                    output +=\r\n                        (alter.innerText || \"\").replace(/\\n/g, \"\").trim() +\r\n                        (index + 1 === ids.length ? \"\" : \"\\n\");\r\n                } else {\r\n                    output += \"\" + (index + 1 === ids.length ? \"\" : \"\\n\");\r\n                }\r\n            }\r\n        } else {\r\n            output += text + (index + 1 === ids.length ? \"\" : \"\\n\");\r\n        }\r\n    });\r\n    return output;\r\n}\r\n\r\nexport function toCamel(s: string) {\r\n    if (s.match(/([0-9a-z][-_][a-z])/gi)) {\r\n        return s.replace(/([-_][a-z])/gi, ($1) => {\r\n            return $1.toUpperCase().replace(\"-\", \"\").replace(\"_\", \"\");\r\n        });\r\n    }\r\n    return s;\r\n};\r\n\r\nexport function bdToCamel(raw) {\r\n    const a = raw\r\n        .split(\"\\n\")\r\n        .map((s) => s.trim())\r\n        .filter((s) => s.length > 0)\r\n        .map((s) => toCamel(s));\r\n    return a.join(\"\\n\");\r\n}\r\n\r\nexport function splitRows(value: string) {\r\n    // const safeInline =\r\n    const rows = value.split(/\\t\\n/g);\r\n    return rows.filter(\r\n        cells => cells[0]?.trim().length !== 0\r\n    ).map(\r\n        cells => cells.replace(/\\n/g, '')\r\n    ).filter(cells => cells.length > 0 && cells !== '―');\r\n}\r\n\r\nexport function splitCells(rows: string[]) {\r\n    const separatedCellsRows = rows.map(\r\n        cells => cells.split(/\\t/g)\r\n    );\r\n    return separatedCellsRows;\r\n}\r\n\r\n/**\r\n * Improved logic from https://gist.github.com/torjusb/7d6baf4b68370b4ef42f\r\n * @param raw\r\n * @constructor\r\n */\r\nexport function ExcelToArrayParser(raw: string) {\r\n  const cells: string[] = raw.split(\"\\t\");\r\n  let rows: string[][] = [];\r\n  let rowTemp: string[] = [];\r\n  let maxCol: number = 0;\r\n  cells.forEach((cell) => {\r\n    // if group cells (previous cell has new line)\r\n    const matchNewLine = cell.match(/\"((?:[^\"]*(?:\\r\\n|\\n\\r|\\n|\\r))+[^\"]+)\"/gm);\r\n    if (matchNewLine) {\r\n      const posMatch = cell.indexOf(matchNewLine[0]) || matchNewLine[0].length;\r\n      const innerCells = [\r\n        cell.substring(0, posMatch),\r\n        cell.substring(posMatch),\r\n      ].filter((s) => s.length !== 0);\r\n      innerCells.forEach((ic) => {\r\n        if (ic.match(/^\".+\\n.+\"$/g)) {\r\n          rowTemp.push(ic.match(/^\".+\\n.+\"$/g)[0].replace(/(^\")|(\"$)/g, \"\"));\r\n        } else {\r\n          const posNewLine = ic.indexOf(\"\\n\");\r\n          if (posNewLine !== -1) {\r\n            const exceedCells = rowTemp.length - maxCol;\r\n            if (posNewLine === 0) {\r\n              if (exceedCells > 0) {\r\n                maxCol = rowTemp.length;\r\n              }\r\n              // push new line\r\n              rows.push(rowTemp);\r\n              rowTemp = [];\r\n              rowTemp.push(ic.replace(/\\n/g, \"\"));\r\n            } else {\r\n              // is a cell at the end of a row\r\n              rowTemp.push(ic.replace(/\\n/g, \"\"));\r\n              if (exceedCells > 0) {\r\n                maxCol = rowTemp.length;\r\n              }\r\n              rows.push(rowTemp);\r\n              rowTemp = [];\r\n            }\r\n          } else {\r\n            rowTemp.push(ic);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      if (cell.match(/^\".+\\n.+\"$/g)) {\r\n        // in case the cell has newline but not at first or last of the row\r\n        const parsed = cell.match(/^\".+\\n.+\"$/g)[0].replace(/(^\")|(\"$)/g, \"\");\r\n        rowTemp.push(parsed);\r\n      } else {\r\n        if (cell.indexOf(\"\\n\") !== -1) {\r\n          // has newline\r\n          const split = cell.split(\"\\n\");\r\n          // add col to row\r\n          rowTemp.push(split[0]);\r\n          const exceedCells = rowTemp.length - maxCol;\r\n          if (exceedCells > 0) {\r\n            maxCol = rowTemp.length;\r\n          }\r\n          // push a complete row to collection\r\n          rows.push(rowTemp);\r\n          // reset row temp with the next split string as the first col\r\n          rowTemp = [split[1]];\r\n        } else {\r\n          rowTemp.push(cell);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const exceedCells = rowTemp.length - maxCol;\r\n  if (rowTemp.length > 0 && rowTemp.length !== 1 && maxCol !== 1) {\r\n    if (exceedCells > 0) {\r\n      maxCol = rowTemp.length;\r\n    }\r\n    rows.push(rowTemp);\r\n  }\r\n\r\n  function fillEmptyCells(numberOfCells: number = 0) {\r\n    const emptyCells: string[] = [];\r\n    for (let i = 0; i < numberOfCells; i++) {\r\n      emptyCells.push(\"\");\r\n    }\r\n    return emptyCells;\r\n  }\r\n\r\n  console.log(rows);\r\n  return rows.map((cells) => {\r\n    if (cells.length < maxCol) {\r\n      cells.push(...fillEmptyCells(maxCol - cells.length));\r\n    }\r\n    return cells;\r\n  });\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { debounceTime, distinctUntilChanged, filter } from \"rxjs/operators\";\r\nimport { copyToClipboard, ExcelToArrayParser, splitCells, splitRows, toCamel } from \"./helpers/helpers\";\r\nimport { ERROR, IValidationItem } from \"./helpers/interface-obj\";\r\nimport { ruleRequired, extractRuleDataType, ruleMin, ruleMax } from \"./helpers/rules\";\r\n\r\n@Component({\r\n  selector: \"my-app\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  name = \"Angular\";\r\n  initValue = ``;\r\n\r\n  inputExcel: FormControl = new FormControl();\r\n\r\n  representJSON;\r\n  errorMessage;\r\n\r\n  ngOnInit() {\r\n    this.inputExcel.valueChanges.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter(s => {\r\n        this.errorMessage = null;\r\n        if(s?.trim().length > 0) {\r\n          return true;\r\n        }\r\n        this.errorMessage = \"Input empty\"\r\n        return false;\r\n      })\r\n    ).subscribe(v => {\r\n      this.errorMessage = null;\r\n      this.representJSON = null;\r\n      try {\r\n        let filteredRows: any = v;\r\n        filteredRows = ExcelToArrayParser(v);\r\n        // filteredRows = filteredRows.map(s => toCamel(s))\r\n        // filteredRows = splitCells(filteredRows);\r\n        filteredRows = this.createRule(filteredRows);\r\n        this.representJSON = filteredRows;\r\n      } catch (e) {\r\n        this.errorMessage = e;\r\n      }\r\n    });\r\n    this.inputExcel.setValue(this.initValue);\r\n  }\r\n\r\n  createRule(arr: string[][]) {\r\n    const rules: { [field: string]: IValidationItem[] } = {}\r\n    arr.forEach(prop => {\r\n      const fieldName = toCamel(prop[0]).trim();\r\n      const fieldJP = prop[2].trim();\r\n      const fieldType = prop[21].trim();\r\n      const fieldMinVal = prop[7].trim();\r\n      const fieldMaxVal = prop[8].trim();\r\n      const fieldFractmentVal = prop[9].trim();\r\n      const fieldRequired = prop[12].trim();\r\n      let rule: IValidationItem[] = []\r\n      if (fieldRequired.length > 0) {\r\n        rule.push(\r\n          ruleRequired(fieldJP)\r\n        )\r\n      }\r\n\r\n      if (fieldType.length > 0) {\r\n        const dt = extractRuleDataType(fieldJP, fieldType, fieldMaxVal, fieldMinVal, fieldFractmentVal);\r\n        if (dt) {\r\n          rule.push(dt);\r\n        }\r\n      }\r\n\r\n      if (fieldMinVal.length > 0 && fieldMinVal !== '-') {\r\n        rule.push(\r\n          ruleMin(fieldJP, fieldMinVal)\r\n        )\r\n      }\r\n\r\n      if (fieldMaxVal.length > 0 && fieldMaxVal !== '-') {\r\n        rule.push(\r\n          ruleMax(fieldJP, fieldMaxVal)\r\n        )\r\n      }\r\n      if (rule.length > 0) {\r\n        rules[fieldName] = rule;\r\n      }\r\n    });\r\n\r\n    return rules;\r\n  }\r\n\r\n  clickCopy() {\r\n    copyToClipboard(JSON.stringify(this.representJSON))\r\n  }\r\n}\r\n\r\n// const a = (formControlName=\"nursingStaff\")|(formControlName=\"otherNursingStaff\")|(formControlName=\"userRequest\")|(formControlName=\"userFamilyRequest\")|(formControlName=\"diseaseName\")|(formControlName=\"onsetDate\")|(formControlName=\"latestAdmissionDate\")|(formControlName=\"latestDischargeDate\")|(formControlName=\"progress\")|(formControlName=\"complicationsControl\")|(formControlName=\"implementationStatus\")|(formControlName=\"managementSeatFlag\")|(formControlName=\"muscleWeaknessStatus\")|(formControlName=\"muscleWeaknessInterference\")|(formControlName=\"muscleWeaknessFuture\")|(formControlName=\"paralysisStatus\")|(formControlName=\"paralysisInterference\")|(formControlName=\"paralysisFuture\")|(formControlName=\"sensoryDysfunctionStatus\")|(formControlName=\"sensoryDysfunctionInterference\")|(formControlName=\"sensoryDysfunctionFuture\")|(formControlName=\"limitJointRangeStatus\")|(formControlName=\"limitJointRangeInterference\")|(formControlName=\"limitJointRangeFuture\")|(formControlName=\"dysphagiaStatus\")|(formControlName=\"dysphagiaInterference\")|(formControlName=\"dysphagiaFuture\")|(formControlName=\"alogiaDysarthriaStatus\")|(formControlName=\"alogiaDysarthriaInterference\")|(formControlName=\"alogiaDysarthriaFuture\")|(formControlName=\"cognitiveDysfunctionStatus\")|(formControlName=\"cognitiveDysfunctionInterference\")|(formControlName=\"cognitiveDysfunctionFuture\")|(formControlName=\"memoryProblemStatus\")|(formControlName=\"memoryProblemInterference\")|(formControlName=\"memoryProblemFuture\")|(formControlName=\"otherDysfunction\")|(formControlName=\"otherDysfunctionStatus\")|(formControlName=\"otherDysfunctionInterference\")|(formControlName=\"otherDysfunctionFuture\")|(formControlName=\"nutritionDisorderStatus\")|(formControlName=\"nutritionDisorderInterference\")|(formControlName=\"nutritionDisorderFuture\")|(formControlName=\"bedsoreStatus\")|(formControlName=\"bedsoreInterference\")|(formControlName=\"bedsoreFuture\")|(formControlName=\"piercingPainStatus\")|(formControlName=\"piercingPainInterference\")|(formControlName=\"piercingPainFuture\")|(formControlName=\"bpsdStatus\")|(formControlName=\"bpsdInterference\")|(formControlName=\"bpsdFuture\")|(formControlName=\"familyFlag\")|(formControlName=\"familyStatus\")|(formControlName=\"livingWith\")|(formControlName=\"welfareEquipmentFlag\")|(formControlName=\"stickStatus\")|(formControlName=\"hardnessStatus\")|(formControlName=\"walkerStatus\")|(formControlName=\"wheelchairStatus\")|(formControlName=\"handrailStatus\")|(formControlName=\"bedStatus\")|(formControlName=\"portableToiletStatus\")|(formControlName=\"familyAdjustStatus\")|(formControlName=\"livingEnvironmentFlag\")|(formControlName=\"livingHouse\")|(formControlName=\"livingApartmentBuilding\")|(formControlName=\"livingApartmentFloor\")|(formControlName=\"livingStairs\")|(formControlName=\"livingElevator\")|(formControlName=\"livingHandrail\")|(formControlName=\"livingHandrailLocation\")|(formControlName=\"livingDinningOnSeat\")|(formControlName=\"livingDinningOnTableChair\")|(formControlName=\"toiletWesternStyle\")|(formControlName=\"toiletJapaneseStyle\")|(formControlName=\"portableToilet\")|(formControlName=\"livingEnvironmentAdjustStatus\")|(formControlName=\"houseCircumferenceFlag\")|(formControlName=\"houseCircumference\")|(formControlName=\"socialParticipationFlag\")|(formControlName=\"socialParticipation\")|(formControlName=\"transportationFlag\")|(formControlName=\"transportationStatus\")|(formControlName=\"transportation\")|(formControlName=\"servicesFlag\")|(formControlName=\"services\")|(formControlName=\"otherEnvironmentFlag\")|(formControlName=\"otherEnvironment\")|(formControlName=\"dailyLifeIndependenceDegree\")|(formControlName=\"dailyLifeIndependenceCriteria\")|(formControlName=\"turningOverCurrentStatus\")|(formControlName=\"turningOverFutureStatus\")|(formControlName=\"getUpCurrentStatus\")|(formControlName=\"getUpFutureStatus\")|(formControlName=\"seatingCurrentStatus\")|(formControlName=\"seatingFutureStatus\")|(formControlName=\"risingFromChairCurrentStatus\")|(formControlName=\"risingFromChairFutureStatus\")|(formControlName=\"risingFromFloorCurrentStatus\")|(formControlName=\"risingFromFloorFutureStatus\")|(formControlName=\"keepStandingCurrentStatus\")|(formControlName=\"keepStandingFutureStatus\")|(formControlName=\"sixMinutesWalkingTestCurrentStatus\")|(formControlName=\"sixMinutesWalkingTestFutureStatus\")|(formControlName=\"timedUpGoTestCurrentStatus\")|(formControlName=\"timedUpGoTestFutureStatus\")|(formControlName=\"mmseCurrentStatus\")|(formControlName=\"mmseFutureStatus\")|(formControlName=\"hdsrCurrentStatus\")|(formControlName=\"hdsrFutureStatus\")|(formControlName=\"medicationManagementCurrentStatus\")|(formControlName=\"medicationManagementFutureStatus\")|(formControlName=\"communicationSituationCurrentStatus\")|(formControlName=\"communicationSituationFutureStatus\")|(formControlName=\"mealCurrentStatus\")|(formControlName=\"mealFutureStatus\")|(formControlName=\"transferCurrentStatus\")|(formControlName=\"transferFutureStatus\")|(formControlName=\"cosmesisCurrentStatus\")|(formControlName=\"cosmesisFutureStatus\")|(formControlName=\"toiletBehaviorCurrentStatus\")|(formControlName=\"toiletBehaviorFutureStatus\")|(formControlName=\"batheCurrentStatus\")|(formControlName=\"batheFutureStatus\")|(formControlName=\"walkingCurrentStatus\")|(formControlName=\"walkingFutureStatus\")|(formControlName=\"stairsCurrentStatus\")|(formControlName=\"stairsFutureStatus\")|(formControlName=\"dressingCurrentStatus\")|(formControlName=\"dressingFutureStatus\")|(formControlName=\"defecationCurrentStatus\")|(formControlName=\"defecationFutureStatus\")|(formControlName=\"urinationCurrentStatus\")|(formControlName=\"urinationFutureStatus\")","export default \"<div class=\\\"flex flex-col\\\">\\r\\n\\t<textarea [formControl]=\\\"inputExcel\\\"\\r\\n\\t\\tclass=\\\"border border-gray-500 outline-none shadow bg-gray-200 h-20 w-full\\\"></textarea>\\r\\n\\t<hr class=\\\"my-2 border border-gray-200\\\">\\r\\n\\t<button (click)=\\\"clickCopy()\\\" class=\\\"w-full border-none bg-green-600 text-white py-4\\\">\\r\\n\\t\\tParse and copy\\r\\n\\t</button>\\r\\n\\t<hr class=\\\"my-2 border border-gray-200\\\">\\r\\n\\t<div *ngIf=\\\"errorMessage?.length > 0\\\" class=\\\"m-2 p-2 border-solid border-l-2 text-red-600 border-red-600 bg-red-100\\\">\\r\\n\\t\\t{{errorMessage}}\\r\\n\\t</div>\\r\\n\\t<pre>\\r\\n    {{representJSON | json}}\\r\\n  </pre>\\r\\n</div>\";","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HelloComponent } from \"./hello.component\";\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, ReactiveFormsModule, FormsModule],\r\n  declarations: [AppComponent, HelloComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","export enum ERROR {\r\n  REQUIRED = 'required',\r\n  MAX_LENGTH = 'maxlength',\r\n  MIN_LENGTH = 'minlength',\r\n  NUMBER = 'number',\r\n  ALP = 'alp',\r\n  HAN_UP = 'hanup',\r\n  HAN = 'han',\r\n  HS_KATA = 'hskata',\r\n  HS = 'hs',\r\n  TB = 'tb',\r\n  EMAIL = 'email',\r\n  DATE_TIME = 'datetime',\r\n  DATE = 'date',\r\n  PASSWORD = 'password',\r\n  PASSWORD_MATCH = 'passwordmatch',\r\n  PASSWORD_DIFF = 'passworddifferent',\r\n  GENDER = 'gender',\r\n  PERIOD = 'period',\r\n  BIRTHDAY = 'birthday',\r\n  JOB_OTHER = 'job_other_required',\r\n  GROUP_SET_REQUIRE = 'group_set_require',\r\n  DECIMAL = 'decimal',\r\n  CARE_PERIOD = 'care_period',\r\n  NAME = 'name',\r\n  SELECT = 'select',\r\n  IME = '',\r\n  VALUE_IN_RANGE = 'value_in_range',\r\n  FORM_FIELD_CHECK = 'form_field_check'\r\n}\r\n\r\nexport type IValidationConfig = { [controlName: string]: IValidationItem[] };\r\n\r\nexport interface IValidationItem {\r\n  rule: ERROR;\r\n  max?: number;\r\n  min?: number;\r\n  messageID: string;\r\n  params?: any[];\r\n  prefix?: string;\r\n}","import { ERROR, IValidationItem } from \"./interface-obj\";\r\n\r\n\r\nexport function extractRuleDataType(fieldName: string, dataType: string, maxNumber: string, minNumber: string, fracment: string): IValidationItem {\r\n    switch (dataType.toLowerCase()) {\r\n        case 'dt':\r\n            return ruleDate(fieldName);\r\n        case 'number':\r\n        case 'num':\r\n            return ruleNumber(fieldName, maxNumber);\r\n        case 'decimal':\r\n            return ruleDecimal(fieldName, maxNumber, fracment);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function ruleDateTime(fieldName: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.DATE_TIME,\r\n        messageID: `ERROR.DATE_TIME_MESSAGE`,\r\n        params: [fieldName]\r\n    }\r\n}\r\n\r\nexport function ruleDate(fieldName: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.DATE,\r\n        messageID: `WAR_VALIDATE_DATE_FORMAT_YMD`,\r\n        params: [fieldName]\r\n    }\r\n}\r\n\r\nexport function ruleNumber(fieldName: string, maxNumber: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.NUMBER,\r\n        messageID: `WAR_VALIDATE_NUM_LEN_MAX`,\r\n        params: [fieldName, Number(maxNumber)]\r\n    }\r\n}\r\n\r\nexport function ruleDecimal(fieldName: string, max: string, fracment: string) {\r\n    return {\r\n      rule: ERROR.DECIMAL,\r\n      messageID: 'WAR_VALIDATE_DECIMAL',\r\n      params: [fieldName, max, fracment]\r\n    }\r\n}\r\n\r\nexport function ruleRequired(fieldName: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.REQUIRED,\r\n        messageID: `WAR_VALIDATE_VALUE_REQUIRED_INPUT`,\r\n        params: [fieldName]\r\n    }\r\n}\r\n\r\nexport function ruleMin(fieldName: string, min: string): IValidationItem {\r\n    // fieldName: string, fieldAsParams: string, min?: number, max?: number\r\n    return {\r\n        rule: ERROR.MIN_LENGTH,\r\n        messageID: `WAR_VALIDATE_NUM_LEN_MIN`,\r\n        min: Number(min),\r\n        params: [fieldName, Number(min)]\r\n    }\r\n}\r\n\r\nexport function ruleMax(fieldName: string, max: string) {\r\n    return {\r\n        rule: ERROR.MAX_LENGTH,\r\n        messageID: `WAR_VALIDATE_NUM_LEN_MAX`,\r\n        max: Number(max),\r\n        params: [fieldName, Number(max)]\r\n    };\r\n}","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\n// import 'core-js/es6/reflect';\r\n// import 'core-js/es7/reflect';\r\n\r\n\r\n/**\r\n * Web Animations `@angular/platform-browser/animations`\r\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\r\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\r\n */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.","export default \"p {\\n  font-family: Lato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7QUFDRiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcclxuICBmb250LWZhbWlseTogTGF0bztcclxufSJdfQ== */\";","import './polyfills';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}