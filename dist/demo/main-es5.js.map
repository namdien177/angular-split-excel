{"version":3,"sources":["webpack:///src/app/hello.component.ts","webpack:///src/app/helpers/helpers.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/helpers/interface-obj.ts","webpack:///src/app/helpers/rules.ts","webpack:///src/polyfills.ts","webpack:///src/app/app.component.scss","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HelloComponent","selector","template","copyToClipboard","text","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","cap","arr","map","s","camelRaw","replace","matched","slice","toUpperCase","twoId","trim","aft","thirdChar","twoIdMatched","toLowerCase","startsWith","threeId","forthChar","aftSpecial","parse","str","a","split","pop","snake","letter","parseMinusPrefix","rows","length","r","splitting","filter","push","mapToText","ids","output","forEach","pair","index","id","rmPf","safe","charAt","console","log","label","querySelector","innerText","alter","toCamel","match","$1","bdToCamel","raw","join","splitRows","cells","splitCells","separatedCellsRows","ExcelToArrayParser","rowTemp","maxCol","cell","matchNewLine","posMatch","indexOf","innerCells","substring","ic","posNewLine","exceedCells","parsed","fillEmptyCells","numberOfCells","emptyCells","i","AppComponent","name","initValue","inputExcel","valueChanges","pipe","errorMessage","subscribe","v","representJSON","filteredRows","createRule","e","setValue","rules","prop","fieldName","fieldJP","fieldType","fieldMinVal","fieldMaxVal","fieldFractmentVal","fieldRequired","rule","dt","JSON","stringify","AppModule","imports","declarations","bootstrap","ERROR","extractRuleDataType","dataType","maxNumber","minNumber","fracment","ruleDate","ruleNumber","ruleDecimal","ruleDateTime","DATE_TIME","messageID","params","DATE","NUMBER","Number","max","DECIMAL","ruleRequired","REQUIRED","ruleMin","min","MIN_LENGTH","ruleMax","MAX_LENGTH","bootstrapModule","then","ref","window","destroy","err","error","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'hello',\r\n  template: `<h1>Hello {{name}}!</h1>`,\r\n  styles: [`h1 { font-family: Lato; }`]\r\n})\r\nexport class HelloComponent  {\r\n  @Input() name: string;\r\n}\r\n","export function copyToClipboard(text) {\r\n    var dummy = document.createElement(\"textarea\");\r\n    // to avoid breaking orgain page when copying more words\r\n    // cant copy when adding below this code\r\n    // dummy.style.display = 'none'\r\n    document.body.appendChild(dummy);\r\n    //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n}\r\n\r\nexport function cap(arr) {\r\n    return arr.map((s) => {\r\n        // snake to pre-camel\r\n        const camelRaw = s.replace(/\\_./g, (matched) =>\r\n            matched.slice(1).toUpperCase()\r\n        );\r\n        const twoId = camelRaw.trim().slice(0, 2);\r\n        const aft = camelRaw\r\n            .trim()\r\n            .slice(3)\r\n            .trim()\r\n            .replace(/(_label)$/g, \"\");\r\n        let thirdChar = camelRaw.trim().slice(2, 3);\r\n        let twoIdMatched = false;\r\n        switch (twoId) {\r\n            case \"ta\":\r\n                if (camelRaw.toLowerCase().startsWith(\"table\")) {\r\n                    break;\r\n                }\r\n            case \"tb\":\r\n            case \"cb\":\r\n            case \"rb\":\r\n            case \"lb\":\r\n            case \"sb\":\r\n                thirdChar = thirdChar.toUpperCase();\r\n                twoIdMatched = true;\r\n                break;\r\n        }\r\n\r\n        if (!twoIdMatched) {\r\n            const threeId = camelRaw.trim().slice(0, 3);\r\n            let forthChar = camelRaw.trim().slice(3, 4);\r\n            const aftSpecial = camelRaw\r\n                .trim()\r\n                .slice(4)\r\n                .trim()\r\n                .replace(/(_label)$/g, \"\");\r\n            switch (threeId) {\r\n                case \"btn\":\r\n                    forthChar = forthChar.toUpperCase();\r\n                    break;\r\n            }\r\n            return threeId + forthChar + aftSpecial;\r\n        } else {\r\n            return twoId + thirdChar + aft;\r\n        }\r\n    });\r\n}\r\n\r\nexport function parse(str) {\r\n    const a = str.split(\"\\n\");\r\n    a.pop();\r\n    return a;\r\n}\r\n\r\n// camel to snake\r\nexport function snake(arr) {\r\n    return arr.map((str) => {\r\n        return (\r\n            str\r\n                .trim()\r\n                // prevent pascal case\r\n                .replace(/^[A-Z]/g, (letter) => `${letter.toLowerCase()}`)\r\n                // Parse camel point\r\n                .replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`)\r\n                // in case number\r\n                .replace(/\\d\\d/g, (letter) => `_${letter.toLowerCase()}`)\r\n        );\r\n    });\r\n};\r\n\r\nexport function parseMinusPrefix(str) {\r\n    const rows = str\r\n        .replace(/\"(.|\\n|\\s)+\"/g, (text) =>\r\n            text.slice(1, text.length - 1).replace(/(\\n|\\s)/g, \"\")\r\n        )\r\n        .split(/\\n/);\r\n    rows.pop();\r\n    return rows.map((r) => {\r\n        const splitting = r.split(/\\s+|\\t+/).filter((s) => s.trim().length > 0);\r\n        if (splitting.length === 1) {\r\n            splitting.push(\"\");\r\n        }\r\n        return splitting;\r\n    });\r\n}\r\n\r\nexport function mapToText(ids) {\r\n    let output = \"\";\r\n    ids.forEach((pair, index) => {\r\n        const id = pair[0]; // string id;\r\n        const text = pair[1]; // possible prefix;\r\n        if (text.trim().length === 0 && id.startsWith(\"cb\")) {\r\n            const rmPf = id.slice(2);\r\n            // pascal to camel\r\n            const safe = rmPf.charAt(0).toLowerCase() + rmPf.slice(1);\r\n            console.log(\"Find: \", safe);\r\n            const label: HTMLLabelElement = document.querySelector(`label[for='${safe}']`);\r\n            if (label) {\r\n                output +=\r\n                    (label.innerText || \"\").replace(/\\n/g, \"\").trim() +\r\n                    (index + 1 === ids.length ? \"\" : \"\\n\");\r\n            } else {\r\n                const alter: HTMLInputElement = document.querySelector(`input[id='${safe}'] + div`);\r\n                if (alter) {\r\n                    console.log(\"Alter: \", alter);\r\n                    output +=\r\n                        (alter.innerText || \"\").replace(/\\n/g, \"\").trim() +\r\n                        (index + 1 === ids.length ? \"\" : \"\\n\");\r\n                } else {\r\n                    output += \"\" + (index + 1 === ids.length ? \"\" : \"\\n\");\r\n                }\r\n            }\r\n        } else {\r\n            output += text + (index + 1 === ids.length ? \"\" : \"\\n\");\r\n        }\r\n    });\r\n    return output;\r\n}\r\n\r\nexport function toCamel(s: string) {\r\n    if (s.match(/([0-9a-z][-_][a-z])/gi)) {\r\n        return s.replace(/([-_][a-z])/gi, ($1) => {\r\n            return $1.toUpperCase().replace(\"-\", \"\").replace(\"_\", \"\");\r\n        });\r\n    }\r\n    return s;\r\n};\r\n\r\nexport function bdToCamel(raw) {\r\n    const a = raw\r\n        .split(\"\\n\")\r\n        .map((s) => s.trim())\r\n        .filter((s) => s.length > 0)\r\n        .map((s) => toCamel(s));\r\n    return a.join(\"\\n\");\r\n}\r\n\r\nexport function splitRows(value: string) {\r\n    // const safeInline =\r\n    const rows = value.split(/\\t\\n/g);\r\n    return rows.filter(\r\n        cells => cells[0]?.trim().length !== 0\r\n    ).map(\r\n        cells => cells.replace(/\\n/g, '')\r\n    ).filter(cells => cells.length > 0 && cells !== '―');\r\n}\r\n\r\nexport function splitCells(rows: string[]) {\r\n    const separatedCellsRows = rows.map(\r\n        cells => cells.split(/\\t/g)\r\n    );\r\n    return separatedCellsRows;\r\n}\r\n\r\n/**\r\n * Improved logic from https://gist.github.com/torjusb/7d6baf4b68370b4ef42f\r\n * @param raw\r\n * @constructor\r\n */\r\nexport function ExcelToArrayParser(raw: string) {\r\n  const cells: string[] = raw.split(\"\\t\");\r\n  let rows: string[][] = [];\r\n  let rowTemp: string[] = [];\r\n  let maxCol: number = 0;\r\n  cells.forEach((cell) => {\r\n    // if group cells (previous cell has new line)\r\n    const matchNewLine = cell.replace(/\\\"\\\"/g, '\\'') // prevent mis-match on multiple line/dual braces cause wrong row identify\r\n    .match(/\"((?:[^\"]*(?:\\r\\n|\\n\\r|\\n|\\r))+[^\"]+)\"/gm);\r\n    if (matchNewLine) {\r\n      const posMatch = cell.indexOf(matchNewLine[0]) || matchNewLine[0].length;\r\n      const innerCells = [\r\n        cell.substring(0, posMatch),\r\n        cell.substring(posMatch),\r\n      ].filter((s) => s.length !== 0);\r\n      innerCells.forEach((ic) => {\r\n        if (ic.match(/^\"(.+\\n+.*)+\"$/g)) {\r\n          rowTemp.push(ic.match(/^\"(.+\\n+.*)+\"$/g)[0].replace(/(^\")|(\"$)/g, \"\"));\r\n        } else {\r\n          const posNewLine = ic.indexOf(\"\\n\");\r\n          if (posNewLine !== -1) {\r\n            const exceedCells = rowTemp.length - maxCol;\r\n            if (posNewLine === 0) {\r\n              if (exceedCells > 0) {\r\n                maxCol = rowTemp.length;\r\n              }\r\n              // push new line\r\n              rows.push(rowTemp);\r\n              rowTemp = [];\r\n              rowTemp.push(ic.replace(/\\n/g, \"\"));\r\n            } else {\r\n              // is a cell at the end of a row\r\n              rowTemp.push(ic.replace(/\\n/g, \"\"));\r\n              if (exceedCells > 0) {\r\n                maxCol = rowTemp.length;\r\n              }\r\n              rows.push(rowTemp);\r\n              rowTemp = [];\r\n            }\r\n          } else {\r\n            rowTemp.push(ic);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      if (cell.match(/^\".+\\n.+\"$/g)) {\r\n        // in case the cell has newline but not at first or last of the row\r\n        const parsed = cell.match(/^\".+\\n.+\"$/g)[0].replace(/(^\")|(\"$)/g, \"\");\r\n        rowTemp.push(parsed);\r\n      } else {\r\n        if (cell.indexOf(\"\\n\") !== -1) {\r\n          // has newline\r\n          const split = cell.split(\"\\n\");\r\n          // add col to row\r\n          rowTemp.push(split[0]);\r\n          const exceedCells = rowTemp.length - maxCol;\r\n          if (exceedCells > 0) {\r\n            maxCol = rowTemp.length;\r\n          }\r\n          // push a complete row to collection\r\n          rows.push(rowTemp);\r\n          // reset row temp with the next split string as the first col\r\n          rowTemp = [split[1]];\r\n        } else {\r\n          rowTemp.push(cell);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const exceedCells = rowTemp.length - maxCol;\r\n  if (rowTemp.length > 0 && rowTemp.length !== 1 && maxCol !== 1) {\r\n    if (exceedCells > 0) {\r\n      maxCol = rowTemp.length;\r\n    }\r\n    rows.push(rowTemp);\r\n  }\r\n\r\n  function fillEmptyCells(numberOfCells: number = 0) {\r\n    const emptyCells: string[] = [];\r\n    for (let i = 0; i < numberOfCells; i++) {\r\n      emptyCells.push(\"\");\r\n    }\r\n    return emptyCells;\r\n  }\r\n\r\n  console.log(rows);\r\n  return rows.map((cells) => {\r\n    if (cells.length < maxCol) {\r\n      cells.push(...fillEmptyCells(maxCol - cells.length));\r\n    }\r\n    return cells;\r\n  });\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { debounceTime, distinctUntilChanged, filter } from \"rxjs/operators\";\r\nimport { copyToClipboard, ExcelToArrayParser, splitCells, splitRows, toCamel } from \"./helpers/helpers\";\r\nimport { ERROR, IValidationItem } from \"./helpers/interface-obj\";\r\nimport { ruleRequired, extractRuleDataType, ruleMin, ruleMax } from \"./helpers/rules\";\r\n\r\n@Component({\r\n  selector: \"my-app\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  name = \"Angular\";\r\n  initValue = ``;\r\n\r\n  inputExcel: FormControl = new FormControl();\r\n\r\n  representJSON;\r\n  errorMessage;\r\n\r\n  ngOnInit() {\r\n    this.inputExcel.valueChanges.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter(s => {\r\n        this.errorMessage = null;\r\n        if(s?.trim().length > 0) {\r\n          return true;\r\n        }\r\n        this.errorMessage = \"Input empty\"\r\n        return false;\r\n      })\r\n    ).subscribe(v => {\r\n      this.errorMessage = null;\r\n      this.representJSON = null;\r\n      try {\r\n        let filteredRows: any = v;\r\n        filteredRows = ExcelToArrayParser(v);\r\n        filteredRows = this.createRule(filteredRows);\r\n        this.representJSON = filteredRows;\r\n      } catch (e) {\r\n        this.errorMessage = e;\r\n      }\r\n    });\r\n    this.inputExcel.setValue(this.initValue);\r\n  }\r\n\r\n  createRule(arr: string[][]) {\r\n    const rules: { [field: string]: IValidationItem[] } = {}\r\n    arr.forEach(prop => {\r\n      const fieldName = toCamel(prop[0]).trim();\r\n      const fieldJP = prop[2].trim();\r\n      const fieldType = prop[21].trim();\r\n      const fieldMinVal = prop[7].trim();\r\n      const fieldMaxVal = prop[8].trim();\r\n      const fieldFractmentVal = prop[9].trim();\r\n      const fieldRequired = prop[12].trim();\r\n      let rule: IValidationItem[] = []\r\n      if (fieldRequired.length > 0) {\r\n        rule.push(\r\n          ruleRequired(fieldJP)\r\n        )\r\n      }\r\n\r\n      if (fieldType.length > 0) {\r\n        const dt = extractRuleDataType(fieldJP, fieldType, fieldMaxVal, fieldMinVal, fieldFractmentVal);\r\n        if (dt) {\r\n          rule.push(dt);\r\n        }\r\n      }\r\n\r\n      if (fieldMinVal.length > 0 && fieldMinVal !== '-') {\r\n        rule.push(\r\n          ruleMin(fieldJP, fieldMinVal)\r\n        )\r\n      }\r\n\r\n      if (fieldMaxVal.length > 0 && fieldMaxVal !== '-') {\r\n        rule.push(\r\n          ruleMax(fieldJP, fieldMaxVal)\r\n        )\r\n      }\r\n      if (rule.length > 0) {\r\n        rules[fieldName] = rule;\r\n      }\r\n    });\r\n\r\n    return rules;\r\n  }\r\n\r\n  clickCopy() {\r\n    copyToClipboard(JSON.stringify(this.representJSON))\r\n  }\r\n}\r\n\r\n// const a = (formControlName=\"nursingStaff\")|(formControlName=\"otherNursingStaff\")|(formControlName=\"userRequest\")|(formControlName=\"userFamilyRequest\")|(formControlName=\"diseaseName\")|(formControlName=\"onsetDate\")|(formControlName=\"latestAdmissionDate\")|(formControlName=\"latestDischargeDate\")|(formControlName=\"progress\")|(formControlName=\"complicationsControl\")|(formControlName=\"implementationStatus\")|(formControlName=\"managementSeatFlag\")|(formControlName=\"muscleWeaknessStatus\")|(formControlName=\"muscleWeaknessInterference\")|(formControlName=\"muscleWeaknessFuture\")|(formControlName=\"paralysisStatus\")|(formControlName=\"paralysisInterference\")|(formControlName=\"paralysisFuture\")|(formControlName=\"sensoryDysfunctionStatus\")|(formControlName=\"sensoryDysfunctionInterference\")|(formControlName=\"sensoryDysfunctionFuture\")|(formControlName=\"limitJointRangeStatus\")|(formControlName=\"limitJointRangeInterference\")|(formControlName=\"limitJointRangeFuture\")|(formControlName=\"dysphagiaStatus\")|(formControlName=\"dysphagiaInterference\")|(formControlName=\"dysphagiaFuture\")|(formControlName=\"alogiaDysarthriaStatus\")|(formControlName=\"alogiaDysarthriaInterference\")|(formControlName=\"alogiaDysarthriaFuture\")|(formControlName=\"cognitiveDysfunctionStatus\")|(formControlName=\"cognitiveDysfunctionInterference\")|(formControlName=\"cognitiveDysfunctionFuture\")|(formControlName=\"memoryProblemStatus\")|(formControlName=\"memoryProblemInterference\")|(formControlName=\"memoryProblemFuture\")|(formControlName=\"otherDysfunction\")|(formControlName=\"otherDysfunctionStatus\")|(formControlName=\"otherDysfunctionInterference\")|(formControlName=\"otherDysfunctionFuture\")|(formControlName=\"nutritionDisorderStatus\")|(formControlName=\"nutritionDisorderInterference\")|(formControlName=\"nutritionDisorderFuture\")|(formControlName=\"bedsoreStatus\")|(formControlName=\"bedsoreInterference\")|(formControlName=\"bedsoreFuture\")|(formControlName=\"piercingPainStatus\")|(formControlName=\"piercingPainInterference\")|(formControlName=\"piercingPainFuture\")|(formControlName=\"bpsdStatus\")|(formControlName=\"bpsdInterference\")|(formControlName=\"bpsdFuture\")|(formControlName=\"familyFlag\")|(formControlName=\"familyStatus\")|(formControlName=\"livingWith\")|(formControlName=\"welfareEquipmentFlag\")|(formControlName=\"stickStatus\")|(formControlName=\"hardnessStatus\")|(formControlName=\"walkerStatus\")|(formControlName=\"wheelchairStatus\")|(formControlName=\"handrailStatus\")|(formControlName=\"bedStatus\")|(formControlName=\"portableToiletStatus\")|(formControlName=\"familyAdjustStatus\")|(formControlName=\"livingEnvironmentFlag\")|(formControlName=\"livingHouse\")|(formControlName=\"livingApartmentBuilding\")|(formControlName=\"livingApartmentFloor\")|(formControlName=\"livingStairs\")|(formControlName=\"livingElevator\")|(formControlName=\"livingHandrail\")|(formControlName=\"livingHandrailLocation\")|(formControlName=\"livingDinningOnSeat\")|(formControlName=\"livingDinningOnTableChair\")|(formControlName=\"toiletWesternStyle\")|(formControlName=\"toiletJapaneseStyle\")|(formControlName=\"portableToilet\")|(formControlName=\"livingEnvironmentAdjustStatus\")|(formControlName=\"houseCircumferenceFlag\")|(formControlName=\"houseCircumference\")|(formControlName=\"socialParticipationFlag\")|(formControlName=\"socialParticipation\")|(formControlName=\"transportationFlag\")|(formControlName=\"transportationStatus\")|(formControlName=\"transportation\")|(formControlName=\"servicesFlag\")|(formControlName=\"services\")|(formControlName=\"otherEnvironmentFlag\")|(formControlName=\"otherEnvironment\")|(formControlName=\"dailyLifeIndependenceDegree\")|(formControlName=\"dailyLifeIndependenceCriteria\")|(formControlName=\"turningOverCurrentStatus\")|(formControlName=\"turningOverFutureStatus\")|(formControlName=\"getUpCurrentStatus\")|(formControlName=\"getUpFutureStatus\")|(formControlName=\"seatingCurrentStatus\")|(formControlName=\"seatingFutureStatus\")|(formControlName=\"risingFromChairCurrentStatus\")|(formControlName=\"risingFromChairFutureStatus\")|(formControlName=\"risingFromFloorCurrentStatus\")|(formControlName=\"risingFromFloorFutureStatus\")|(formControlName=\"keepStandingCurrentStatus\")|(formControlName=\"keepStandingFutureStatus\")|(formControlName=\"sixMinutesWalkingTestCurrentStatus\")|(formControlName=\"sixMinutesWalkingTestFutureStatus\")|(formControlName=\"timedUpGoTestCurrentStatus\")|(formControlName=\"timedUpGoTestFutureStatus\")|(formControlName=\"mmseCurrentStatus\")|(formControlName=\"mmseFutureStatus\")|(formControlName=\"hdsrCurrentStatus\")|(formControlName=\"hdsrFutureStatus\")|(formControlName=\"medicationManagementCurrentStatus\")|(formControlName=\"medicationManagementFutureStatus\")|(formControlName=\"communicationSituationCurrentStatus\")|(formControlName=\"communicationSituationFutureStatus\")|(formControlName=\"mealCurrentStatus\")|(formControlName=\"mealFutureStatus\")|(formControlName=\"transferCurrentStatus\")|(formControlName=\"transferFutureStatus\")|(formControlName=\"cosmesisCurrentStatus\")|(formControlName=\"cosmesisFutureStatus\")|(formControlName=\"toiletBehaviorCurrentStatus\")|(formControlName=\"toiletBehaviorFutureStatus\")|(formControlName=\"batheCurrentStatus\")|(formControlName=\"batheFutureStatus\")|(formControlName=\"walkingCurrentStatus\")|(formControlName=\"walkingFutureStatus\")|(formControlName=\"stairsCurrentStatus\")|(formControlName=\"stairsFutureStatus\")|(formControlName=\"dressingCurrentStatus\")|(formControlName=\"dressingFutureStatus\")|(formControlName=\"defecationCurrentStatus\")|(formControlName=\"defecationFutureStatus\")|(formControlName=\"urinationCurrentStatus\")|(formControlName=\"urinationFutureStatus\")","export default \"<div class=\\\"flex flex-col\\\">\\r\\n\\t<textarea [formControl]=\\\"inputExcel\\\"\\r\\n\\t\\tclass=\\\"border border-gray-500 outline-none shadow bg-gray-200 h-20 w-full\\\"></textarea>\\r\\n\\t<hr class=\\\"my-2 border border-gray-200\\\">\\r\\n\\t<button (click)=\\\"clickCopy()\\\" class=\\\"w-full border-none bg-green-600 text-white py-4\\\">\\r\\n\\t\\tParse and copy\\r\\n\\t</button>\\r\\n\\t<hr class=\\\"my-2 border border-gray-200\\\">\\r\\n\\t<div *ngIf=\\\"errorMessage?.length > 0\\\" class=\\\"m-2 p-2 border-solid border-l-2 text-red-600 border-red-600 bg-red-100\\\">\\r\\n\\t\\t{{errorMessage}}\\r\\n\\t</div>\\r\\n\\t<pre>\\r\\n    {{representJSON | json}}\\r\\n  </pre>\\r\\n</div>\";","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HelloComponent } from \"./hello.component\";\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, ReactiveFormsModule, FormsModule],\r\n  declarations: [AppComponent, HelloComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","export enum ERROR {\r\n  REQUIRED = 'required',\r\n  MAX_LENGTH = 'maxlength',\r\n  MIN_LENGTH = 'minlength',\r\n  NUMBER = 'number',\r\n  ALP = 'alp',\r\n  HAN_UP = 'hanup',\r\n  HAN = 'han',\r\n  HS_KATA = 'hskata',\r\n  HS = 'hs',\r\n  TB = 'tb',\r\n  EMAIL = 'email',\r\n  DATE_TIME = 'datetime',\r\n  DATE = 'date',\r\n  PASSWORD = 'password',\r\n  PASSWORD_MATCH = 'passwordmatch',\r\n  PASSWORD_DIFF = 'passworddifferent',\r\n  GENDER = 'gender',\r\n  PERIOD = 'period',\r\n  BIRTHDAY = 'birthday',\r\n  JOB_OTHER = 'job_other_required',\r\n  GROUP_SET_REQUIRE = 'group_set_require',\r\n  DECIMAL = 'decimal',\r\n  CARE_PERIOD = 'care_period',\r\n  NAME = 'name',\r\n  SELECT = 'select',\r\n  IME = '',\r\n  VALUE_IN_RANGE = 'value_in_range',\r\n  FORM_FIELD_CHECK = 'form_field_check'\r\n}\r\n\r\nexport type IValidationConfig = { [controlName: string]: IValidationItem[] };\r\n\r\nexport interface IValidationItem {\r\n  rule: ERROR;\r\n  max?: number;\r\n  min?: number;\r\n  messageID: string;\r\n  params?: any[];\r\n  prefix?: string;\r\n}","import { ERROR, IValidationItem } from \"./interface-obj\";\r\n\r\n\r\nexport function extractRuleDataType(fieldName: string, dataType: string, maxNumber: string, minNumber: string, fracment: string): IValidationItem {\r\n    switch (dataType.toLowerCase()) {\r\n        case 'dt':\r\n            return ruleDate(fieldName);\r\n        case 'number':\r\n        case 'num':\r\n            return ruleNumber(fieldName, maxNumber);\r\n        case 'decimal':\r\n            return ruleDecimal(fieldName, maxNumber, fracment);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function ruleDateTime(fieldName: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.DATE_TIME,\r\n        messageID: `ERROR.DATE_TIME_MESSAGE`,\r\n        params: [fieldName]\r\n    }\r\n}\r\n\r\nexport function ruleDate(fieldName: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.DATE,\r\n        messageID: `WAR_VALIDATE_DATE_FORMAT_YMD`,\r\n        params: [fieldName]\r\n    }\r\n}\r\n\r\nexport function ruleNumber(fieldName: string, maxNumber: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.NUMBER,\r\n        messageID: `WAR_VALIDATE_NUM_LEN_MAX`,\r\n        params: [fieldName, Number(maxNumber)]\r\n    }\r\n}\r\n\r\nexport function ruleDecimal(fieldName: string, max: string, fracment: string) {\r\n    return {\r\n      rule: ERROR.DECIMAL,\r\n      messageID: 'WAR_VALIDATE_DECIMAL',\r\n      params: [fieldName, max, fracment]\r\n    }\r\n}\r\n\r\nexport function ruleRequired(fieldName: string): IValidationItem {\r\n    return {\r\n        rule: ERROR.REQUIRED,\r\n        messageID: `WAR_VALIDATE_VALUE_REQUIRED_INPUT`,\r\n        params: [fieldName]\r\n    }\r\n}\r\n\r\nexport function ruleMin(fieldName: string, min: string): IValidationItem {\r\n    // fieldName: string, fieldAsParams: string, min?: number, max?: number\r\n    return {\r\n        rule: ERROR.MIN_LENGTH,\r\n        messageID: `WAR_VALIDATE_NUM_LEN_MIN`,\r\n        min: Number(min),\r\n        params: [fieldName, Number(min)]\r\n    }\r\n}\r\n\r\nexport function ruleMax(fieldName: string, max: string) {\r\n    return {\r\n        rule: ERROR.MAX_LENGTH,\r\n        messageID: `WAR_VALIDATE_NUM_LEN_MAX`,\r\n        max: Number(max),\r\n        params: [fieldName, Number(max)]\r\n    };\r\n}","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\r\n */\r\n\r\n/***************************************************************************************************\r\n * BROWSER POLYFILLS\r\n */\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol';\r\n// import 'core-js/es6/object';\r\n// import 'core-js/es6/function';\r\n// import 'core-js/es6/parse-int';\r\n// import 'core-js/es6/parse-float';\r\n// import 'core-js/es6/number';\r\n// import 'core-js/es6/math';\r\n// import 'core-js/es6/string';\r\n// import 'core-js/es6/date';\r\n// import 'core-js/es6/array';\r\n// import 'core-js/es6/regexp';\r\n// import 'core-js/es6/map';\r\n// import 'core-js/es6/set';\r\n\r\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\r\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n/** Evergreen browsers require these. **/\r\n// import 'core-js/es6/reflect';\r\n// import 'core-js/es7/reflect';\r\n\r\n\r\n/**\r\n * Web Animations `@angular/platform-browser/animations`\r\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\r\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\r\n */\r\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\r\n\r\n\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import 'intl';  // Run `npm install --save intl`.","export default \"p {\\n  font-family: Lato;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQUE7QUFDRiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcclxuICBmb250LWZhbWlseTogTGF0bztcclxufSJdfQ== */\";","import './polyfills';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}